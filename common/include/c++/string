#ifndef __STRING
#define __STRING
#include "bits/basic_string.hpp"
namespace std
{
    typedef basic_string<char> string;
    typedef basic_string<wchar_t> wstring;
    typedef basic_string<char8_t> u8string;
    typedef basic_string<char16_t> u16string;
    typedef basic_string<char32_t> u32string;
    string to_string(int value);
    string to_string(long value);
    string to_string(long long value);
    string to_string(unsigned int value);
    string to_string(unsigned long value);
    string to_string(unsigned long long value);
    string to_string(void* ptr);
    wstring to_wstring(int value);
	wstring to_wstring(long value);
	wstring to_wstring(long long value);
	wstring to_wstring(unsigned int value);
	wstring to_wstring(unsigned long value);
	wstring to_wstring(unsigned long long value);
	wstring to_wstring(void* ptr);
    u8string to_u8string(int value);
	u8string to_u8string(long value);
	u8string to_u8string(long long value);
	u8string to_u8string(unsigned int value);
	u8string to_u8string(unsigned long value);
	u8string to_u8string(unsigned long long value);
	u8string to_u8string(void* ptr);
    u16string to_u16string(int value);
	u16string to_u16string(long value);
	u16string to_u16string(long long value);
	u16string to_u16string(unsigned int value);
	u16string to_u16string(unsigned long value);
	u16string to_u16string(unsigned long long value);
	u16string to_u16string(void* ptr);
    u32string to_u32string(int value);
	u32string to_u32string(long value);
	u32string to_u32string(long long value);
	u32string to_u32string(unsigned int value);
	u32string to_u32string(unsigned long value);
	u32string to_u32string(unsigned long long value);
	u32string to_u32string(void* ptr);
}
#endif